{"version":3,"sources":["LeftMenuLink.tsx","LeftMenu.tsx","ColorModeSwitcher.tsx","TopButtons.tsx","Contact.tsx","Projects.tsx","Intro.tsx","Resume.tsx","Main.tsx","theme.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","locales/en.ts","locales/es.ts","i18n.ts","index.tsx"],"names":["LeftMenuLink","to","children","location","colorMode","useColorMode","isCurrent","pathname","iconSize","Icon","BsPersonFill","size","BsPerson","BsBriefcaseFill","BsBriefcase","IoCubeSharp","IoCubeOutline","IoChatbubbleEllipsesSharp","IoChatbubbleEllipsesOutline","align","fontSize","mb","mr","as","ReachLink","color","undefined","ml","LeftMenu","useTranslation","base","sm","pl","direction","pt","bg","Trans","i18nKey","ColorModeSwitcher","props","toggleColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","variant","marginLeft","onClick","icon","TopButtons","i18n","useLocalStorage","language","setLanguage","changeLanguage","lng","Button","rightIcon","minWidth","justifySelf","Contact","href","isExternal","Projects","Intro","Resume","style","marginBottom","justify","textTransform","fontWeight","Main","useEffect","resize","window","addEventListener","removeEventListener","useState","width","innerWidth","height","innerHeight","setWindowSize","mt","justifyContent","pr","overflowY","primary","path","DARK_LINK_COLOR","LIGHT_LINK_COLOR","customTheme","config","initialColorMode","useSystemColorMode","colors","gray","styles","global","body","background","mode","components","Link","baseStyle","_focus","boxShadow","breakpoints","createBreakpoints","md","lg","xl","theme","extendTheme","App","fallback","minH","templateColumns","marginRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","en","menu","about","projects","contact","resume","intro","greeting","text1","text2","text3","text4","skills","header","education","dates","experience","pearl","headers","items","gumgum","coinlog","nftExplorer","nftAutoTool","es","localStorage","getItem","JSON","parse","use","initReactI18next","init","resources","translation","fallbackLng","interpolation","escapeValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6959fe21.chunk.js","sourcesContent":["import { FC } from \"react\";\nimport { Flex, Link, useColorMode } from \"@chakra-ui/react\";\nimport { Link as ReachLink } from \"@reach/router\";\nimport { BsPerson } from \"@react-icons/all-files/bs/BsPerson\";\nimport { BsPersonFill } from \"@react-icons/all-files/bs/BsPersonFill\";\nimport { IoCubeOutline } from \"@react-icons/all-files/io5/IoCubeOutline\";\nimport { IoCubeSharp } from \"@react-icons/all-files/io5/IoCubeSharp\";\nimport { IoChatbubbleEllipsesOutline } from \"@react-icons/all-files/io5/IoChatbubbleEllipsesOutline\";\nimport { IoChatbubbleEllipsesSharp } from \"@react-icons/all-files/io5/IoChatbubbleEllipsesSharp\";\nimport { BsBriefcaseFill } from \"@react-icons/all-files/bs/BsBriefcaseFill\";\nimport { BsBriefcase } from \"@react-icons/all-files/bs/BsBriefcase\";\n\ninterface LeftMenuLinkProps {\n  to: string;\n  children: React.ReactNode;\n  location: Location;\n}\n\nconst LeftMenuLink = ({ to, children, location }: LeftMenuLinkProps) => {\n  const { colorMode } = useColorMode();\n  const isCurrent = location.pathname === to;\n  const iconSize: number = 15;\n\n  let Icon: FC = () => null;\n  switch (to) {\n    case \"/\":\n      Icon = () =>\n        isCurrent ? (\n          <BsPersonFill size={iconSize} />\n        ) : (\n          <BsPerson size={iconSize} />\n        );\n      break;\n    case \"/resume\":\n      Icon = () =>\n        isCurrent ? (\n          <BsBriefcaseFill size={iconSize} />\n        ) : (\n          <BsBriefcase size={iconSize} />\n        );\n      break;\n    case \"/projects\":\n      Icon = () =>\n        isCurrent ? (\n          <IoCubeSharp size={iconSize} />\n        ) : (\n          <IoCubeOutline size={iconSize} />\n        );\n      break;\n    case \"/contact\":\n      Icon = () =>\n        isCurrent ? (\n          <IoChatbubbleEllipsesSharp size={iconSize} />\n        ) : (\n          <IoChatbubbleEllipsesOutline size={iconSize} />\n        );\n      break;\n  }\n\n  return (\n    <Flex>\n      <Flex align=\"center\" fontSize=\"10\" mb={5} mr={2}>\n        <Icon />\n      </Flex>\n      <Link\n        as={ReachLink}\n        to={to}\n        color={\n          isCurrent ? (colorMode === \"dark\" ? \"white\" : \"black\") : undefined\n        }\n        mb={5}\n        ml={0}\n      >\n        {children}\n      </Link>\n    </Flex>\n  );\n};\nexport default LeftMenuLink;\n","import { Flex, useColorMode } from \"@chakra-ui/react\";\nimport { Location } from \"@reach/router\";\nimport { useTranslation, Trans } from \"react-i18next\";\n\nimport LeftMenuLink from \"./LeftMenuLink\";\n\nconst LeftMenu = () => {\n  const { colorMode } = useColorMode();\n  useTranslation();\n  return (\n    <Location>\n      {({ location }) => (\n        <Flex\n          fontSize={{ base: 15, sm: 18 }}\n          pl={{ base: 4, sm: 6 }}\n          direction=\"column\"\n          pt=\"105px\"\n          bg={colorMode === \"dark\" ? \"black\" : \"gray.100\"}\n        >\n          <LeftMenuLink to=\"/\" location={location}>\n            <Trans i18nKey=\"menu.about\">About</Trans>\n          </LeftMenuLink>\n          <LeftMenuLink to=\"/resume\" location={location}>\n            <Trans i18nKey=\"menu.resume\">Resume</Trans>\n          </LeftMenuLink>\n          <LeftMenuLink to=\"/projects\" location={location}>\n            <Trans i18nKey=\"menu.projects\">Projects</Trans>\n          </LeftMenuLink>\n          <LeftMenuLink to=\"/contact\" location={location}>\n            <Trans i18nKey=\"menu.contact\">Contact</Trans>\n          </LeftMenuLink>\n        </Flex>\n      )}\n    </Location>\n  );\n};\n\nexport default LeftMenu;\n","import * as React from \"react\";\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps\n} from \"@chakra-ui/react\";\nimport { FaMoon } from \"@react-icons/all-files/fa/FaMoon\";\nimport { FaSun } from \"@react-icons/all-files/fa/FaSun\";\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  );\n};\n","import { Fragment } from \"react\";\nimport { Button, Menu, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocalStorage } from \"usehooks-ts\";\n\nconst TopButtons = () => {\n  const { i18n } = useTranslation();\n  const [language, setLanguage] = useLocalStorage(\"language\", \"en\");\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n    setLanguage(lng);\n  };\n\n  return (\n    <Fragment>\n      <Menu>\n        <MenuButton\n          size=\"sm\"\n          variant=\"ghost\"\n          as={Button}\n          fontSize={{ base: 12, sm: 15 }}\n          rightIcon={<ChevronDownIcon />}\n        >\n          {language === \"en\" ? \"English\" : \"Español\"}\n        </MenuButton>\n        <MenuList fontSize={{ base: 12, sm: 15 }} minWidth=\"115px\">\n          <MenuItem onClick={() => changeLanguage(\"en\")}>\n            {language === \"en\" ? <b>English</b> : \"English\"}\n          </MenuItem>\n          <MenuItem onClick={() => changeLanguage(\"es\")}>\n            {language === \"es\" ? <b>Español</b> : \"Español\"}\n          </MenuItem>\n        </MenuList>\n      </Menu>\n      <ColorModeSwitcher\n        fontSize={{ base: 12, sm: 15 }}\n        size=\"sm\"\n        justifySelf=\"flex-end\"\n      />\n    </Fragment>\n  );\n};\nexport default TopButtons;\n","import { Fragment } from \"react\";\nimport { Text, Link, UnorderedList, ListItem } from \"@chakra-ui/react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { useTranslation, Trans } from \"react-i18next\";\n\nconst Contact = (props: RouteComponentProps) => {\n  useTranslation();\n  return (\n    <Fragment>\n      <Text mb={4}>\n        <Trans i18nKey=\"contact.text1\">You can find me on:</Trans>\n      </Text>\n      <UnorderedList>\n        <ListItem>\n          <Link href=\"https://www.linkedin.com/in/imayoral/\" isExternal>\n            LinkedIn\n          </Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"https://github.com/ivanm\" isExternal>\n            Github\n          </Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"https://twitter.com/vaan\" isExternal>\n            Twitter\n          </Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"https://medium.com/@ivanmgg\" isExternal>\n            Medium\n          </Link>\n        </ListItem>\n      </UnorderedList>\n    </Fragment>\n  );\n};\nexport default Contact;\n","import { Fragment } from \"react\";\nimport { Text, UnorderedList, ListItem, Link } from \"@chakra-ui/react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { useTranslation, Trans } from \"react-i18next\";\n\nconst Projects = (props: RouteComponentProps) => {\n  useTranslation();\n  return (\n    <Fragment>\n      <Text mb={4}>\n        <Trans i18nKey=\"projects.text1\">\n          This are some of the\n          <Link isExternal href=\"https://github.com/ivanm\">\n            Open Source\n          </Link>\n          projects that I'm currently working on my free time:\n        </Trans>\n      </Text>\n      <UnorderedList>\n        <ListItem>\n          <Trans i18nKey=\"projects.coinlog\">\n            <Link isExternal href=\"http://coinlog.vaan.dev\">\n              coinlog:\n            </Link>\n            A configurable cryptocurrency price tracker.\n          </Trans>\n        </ListItem>\n        <ListItem>\n          <Trans i18nKey=\"projects.nftExplorer\">\n            <Link isExternal href=\"http://nft-explorer.vaan.dev\">\n              nft-explorer:\n            </Link>\n            A visualization tool for NFT Collections. An alternative to OpenSea.\n          </Trans>\n        </ListItem>\n        <ListItem>\n          <Trans i18nKey=\"projects.nftAutoTool\">\n            <Link isExternal href=\"https://github.com/ivanm/nft-autotool\">\n              nft-autotool:\n            </Link>\n            NFT Genereator script using layers with different rarities.\n          </Trans>\n        </ListItem>\n      </UnorderedList>\n    </Fragment>\n  );\n};\nexport default Projects;\n","import { Fragment } from \"react\";\nimport { Text, Link } from \"@chakra-ui/react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { useTranslation, Trans } from \"react-i18next\";\n\nconst Intro = (props: RouteComponentProps) => {\n  useTranslation();\n  return (\n    <Fragment>\n      <Text fontSize={18} mb={4}>\n        <Trans i18nKey=\"intro.greeting\">\n          Howdy!\n        </Trans>\n      </Text>\n      <Text mb={4}>\n        <Trans i18nKey=\"intro.text1\">\n          My name is <b>Iván Mayoral</b>, I am a<b>Senior Software Engineer</b>\n          with over <b>10</b> years of professional experience in Computer\n          Science.\n        </Trans>\n      </Text>\n      <Text mb={4}>\n        <Trans i18nKey=\"intro.text2\">\n          I live in <b>Mexico City</b> and have been working remotely for about\n          9 years as a contractor for US Tech Companies:\n          <Link isExternal href=\"https://gumgum.com/\">\n            GumGum\n          </Link>\n          and\n          <Link isExternal href=\"https://hellopearl.com\">\n            Pearl\n          </Link>\n        </Trans>\n      </Text>\n      <Text mb={4}>\n        <Trans i18nKey=\"intro.text3\">\n          I am passionate about Free Software, Linux, UI/UX, Accesibility, and\n          React.\n        </Trans>\n      </Text>\n      <Text mb={4}>\n        <Trans i18nKey=\"intro.text4\">\n          My main programming languages are JavaScript (TypeScript ❤️), PHP7,\n          Ruby and Solidity, however I have worked with C, C++ and Java in my\n          first early jobs.\n        </Trans>\n      </Text>\n    </Fragment>\n  );\n};\nexport default Intro;\n","import { Fragment } from \"react\";\nimport { Text, Flex, UnorderedList, ListItem } from \"@chakra-ui/react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { Heading } from \"@chakra-ui/react\";\n\nconst Resume = (props: RouteComponentProps) => {\n  useTranslation();\n  return (\n    <Fragment>\n      <Heading as=\"h2\" mb={2} fontSize={23}>\n        <Trans i18nKey=\"resume.skills.header\">Skills</Trans>\n      </Heading>\n      <Text>\n        <Trans i18nKey=\"resume.skills.text\">\n          <Heading as=\"h3\" size=\"sm\" mb={2}>\n            Frontend\n          </Heading>\n          <Text mb={2} fontSize=\"sm\">\n            JavaScript, TypeScript, CSS3, HTML5, JAMstack, React.js (Redux,\n            Hooks), Vue.js (Vuex, Nuxt).\n          </Text>\n          <Heading as=\"h3\" size=\"sm\" mb={2}>\n            Backend\n          </Heading>\n          <Text mb={2} fontSize=\"sm\">\n            SQL, Node.js, Express, PHP7, Laravel, Ruby on Rails, Solidity.\n          </Text>\n          <Heading as=\"h3\" size=\"sm\" mb={2}>\n            Tooling\n          </Heading>\n          <Text mb={2} fontSize=\"sm\">\n            Git, Git Flow, Vim, Docker, Docker Compose, Drone CI, Jenkins,\n            Ansible, Puppet, Vagrant, VirtualBox, Bash, Linux (Ubuntu, Debian,\n            Arch), AWS.\n          </Text>\n          <Heading as=\"h3\" size=\"sm\" mb={2}>\n            Other\n          </Heading>\n          <Text mb={7} fontSize=\"sm\">\n            Agile, MVC, REST, Object-oriented programming, Functional\n            Programming, Microservices, Internationalization, Continuous\n            Integration, Smart Contracts on Blockchain.\n          </Text>\n        </Trans>\n      </Text>\n      <hr style={{ marginBottom: \"20px\" }} />\n      <Heading as=\"h2\" mb={2} fontSize={23}>\n        <Trans i18nKey=\"resume.education.header\">Education</Trans>\n      </Heading>\n      <Flex justify=\"space-between\" mb={4}>\n        <Flex direction=\"column\">\n          <Trans i18nKey=\"resume.education.text\">\n            <Heading as=\"h2\" size=\"md\">\n              IPN Escuela Superior de Computo\n            </Heading>\n            <Heading as=\"h3\" size=\"sm\" mb={7}>\n              Computer Systems Engineering\n            </Heading>\n          </Trans>\n        </Flex>\n        <Flex>\n          <Text fontSize={13} textTransform=\"uppercase\" fontWeight=\"bold\">\n            <Trans i18nKey=\"resume.education.ipn.dates\">2003 - 2007</Trans>\n          </Text>\n        </Flex>\n      </Flex>\n      <hr style={{ marginBottom: \"20px\" }} />\n      <Heading as=\"h2\" mb={2} fontSize={23}>\n        <Trans i18nKey=\"resume.experience.header\">Experience</Trans>\n      </Heading>\n      <Flex justify=\"space-between\">\n        <Flex direction=\"column\">\n          <Trans i18nKey=\"resume.experience.pearl.headers\">\n            <Heading as=\"h2\" size=\"md\">\n              Pearl\n            </Heading>\n            <Heading as=\"h3\" size=\"sm\" mb={2}>\n              Senior Software Engineer\n            </Heading>\n          </Trans>\n        </Flex>\n        <Flex>\n          <Text fontSize={13} textTransform=\"uppercase\" fontWeight=\"bold\">\n            <Trans i18nKey=\"resume.experience.pearl.dates\">\n              July 2020 - June 2021\n            </Trans>\n          </Text>\n        </Flex>\n      </Flex>\n      <UnorderedList mb={4} fontSize=\"sm\">\n        <Trans i18nKey=\"resume.experience.pearl.items\">\n          <ListItem>Item 0</ListItem>\n          <ListItem>Item 1</ListItem>\n          <ListItem>Item 2</ListItem>\n          <ListItem>Item 3</ListItem>\n        </Trans>\n      </UnorderedList>\n      <Flex justify=\"space-between\">\n        <Flex direction=\"column\">\n          <Trans i18nKey=\"resume.experience.gumgum.headers\">\n            <Heading as=\"h2\" size=\"md\">\n              GumGum\n            </Heading>\n            <Heading as=\"h3\" size=\"sm\" mb={2}>\n              Senior Software Engineer\n            </Heading>\n          </Trans>\n        </Flex>\n        <Flex>\n          <Text fontSize={13} textTransform=\"uppercase\" fontWeight=\"bold\">\n            <Trans i18nKey=\"resume.experience.gumgum.dates\">\n              July 2020 - June 2021\n            </Trans>\n          </Text>\n        </Flex>\n      </Flex>\n      <UnorderedList fontSize=\"sm\" mb={7}>\n        <Trans i18nKey=\"resume.experience.gumgum.items\">\n          <ListItem>Item 0</ListItem>\n          <ListItem>Item 1</ListItem>\n          <ListItem>Item 2</ListItem>\n          <ListItem>Item 3</ListItem>\n          <ListItem>Item 4</ListItem>\n          <ListItem>Item 5</ListItem>\n          <ListItem>Item 6</ListItem>\n          <ListItem>Item 7</ListItem>\n        </Trans>\n      </UnorderedList>\n    </Fragment>\n  );\n};\nexport default Resume;\n","import { useState, useEffect } from \"react\";\nimport { Flex, useColorMode } from \"@chakra-ui/react\";\nimport { Router } from \"@reach/router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport TopButtons from \"./TopButtons\";\nimport Contact from \"./Contact\";\nimport Projects from \"./Projects\";\nimport Intro from \"./Intro\";\nimport Resume from \"./Resume\";\n\nconst Main = () => {\n  const { colorMode } = useColorMode();\n  useTranslation();\n\n  useEffect(() => {\n    resize();\n    window.addEventListener(\"resize\", () => {\n      resize();\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  const [, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  const resize = () => {\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  };\n\n  return (\n    <Flex\n      width=\"100%\"\n      direction=\"column\"\n      bg={colorMode === \"dark\" ? \"gray.900\" : \"gray.50\"}\n    >\n      <Flex mt={5} direction=\"row\" justifyContent=\"end\" mr={4}>\n        <TopButtons />\n      </Flex>\n      <Flex\n        pl={12}\n        pr={12}\n        direction=\"column\"\n        mt={12}\n        align=\"center\"\n        overflowY=\"auto\"\n        height={window.innerHeight - 103}\n      >\n        <Router style={{ width: \"100%\" }} primary={false}>\n          <Intro path=\"/\" />\n          <Resume path=\"/resume\" />\n          <Projects path=\"/projects\" />\n          <Contact path=\"/contact\" />\n        </Router>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Main;\n","import {\n  extendTheme,\n  ThemeConfig,\n  Colors,\n  ThemeComponents\n} from \"@chakra-ui/react\";\nimport {\n  mode,\n  Styles,\n  Breakpoints,\n  createBreakpoints\n} from \"@chakra-ui/theme-tools\";\nimport type { Dict } from \"@chakra-ui/utils\";\n\n\nconst DARK_LINK_COLOR = \"#489d4f\";\nconst LIGHT_LINK_COLOR = \"#267a24\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false\n};\n\nconst styles: Styles = {\n  global: props => ({\n    body: {\n      background: mode(\"gray.100\", \"black\")(props),\n      color: mode(\"gray.900\", \"gray.50\")(props)\n    }\n  })\n};\n\nconst colors: Colors = {\n  gray: {\n    50: \"#f2f2f2\",\n    100: \"#d9d9d9\",\n    200: \"#bfbfbf\",\n    300: \"#a6a6a6\",\n    400: \"#8c8c8c\",\n    500: \"#737373\",\n    600: \"#595959\",\n    700: \"#404040\",\n    800: \"#262626\",\n    900: \"#0d0d0d\"\n  }\n};\nconst components: ThemeComponents = {\n  Link: {\n    baseStyle: ({ colorMode }) => ({\n      color: colorMode === \"dark\" ? DARK_LINK_COLOR : LIGHT_LINK_COLOR,\n      fontWeight: \"bold\",\n      _focus: {\n        boxShadow:\n          colorMode === \"dark\"\n            ? `${DARK_LINK_COLOR} 0px 0px 0px 3px`\n            : `${LIGHT_LINK_COLOR} 0px 0px 0px 3px`\n      }\n    })\n  },\n  Button: {\n    baseStyle: ({ colorMode }) => ({\n      _focus: {\n        boxShadow:\n          colorMode === \"dark\"\n            ? `${DARK_LINK_COLOR} 0px 0px 0px 3px`\n            : `${LIGHT_LINK_COLOR} 0px 0px 0px 3px`\n      }\n    })\n  }\n};\n\nconst breakpoints: Breakpoints<Dict> = createBreakpoints({\n  sm: \"800px\",\n  md: \"900px\",\n  lg: \"1000px\",\n  xl: \"1200px\",\n});\n\nconst customTheme = {\n  config,\n  colors,\n  styles,\n  components,\n  breakpoints\n};\n\nconst theme = extendTheme(customTheme);\nexport default theme;\n","import { Suspense } from \"react\";\nimport { ChakraProvider, Box, Grid } from \"@chakra-ui/react\";\nimport LeftMenu from \"./LeftMenu\";\nimport Main from \"./Main\";\nimport theme from \"./theme\";\n\nexport const App = () => (\n  <Suspense fallback=\"loading\">\n    <ChakraProvider theme={theme}>\n      <Box fontSize=\"md\">\n        <Grid\n          minH=\"100vh\"\n          templateColumns={{ base: \"120px 1fr\", sm: \"165px 1fr\" }}\n          width={{ base: \"auto\", sm: \"800px\" }}\n          marginRight={{ base: 0, sm: \"auto\" }}\n          marginLeft={{ base: 0, sm: \"auto\" }}\n        >\n          <LeftMenu />\n          <Main />\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  </Suspense>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","const en: any = {\n  menu: {\n    about: \"About\",\n    projects: \"Projects\",\n    contact: \"Contact\",\n    resume: \"Resume\"\n  },\n  intro: {\n    greeting: \"Howdy!\",\n    text1:\n      \"My name is <1>Iván Mayoral</1>; I am a <3>Senior Software Engineer</3> with over <5>ten</5> years of professional experience in Computer Science.\",\n    text2:\n      \"I live in <1>Mexico City</1> 🇲🇽 from where I have been working remotely for about nine years as a contractor for US Tech Companies: <3>GumGum</3> and <5>Pearl</5>.\",\n    text3:\n      \"I am passionate about Free Software, Linux, UI/UX, Accessibility, and React.\",\n    text4:\n      \"My main programming languages are JavaScript (TypeScript ❤️), PHP7, Ruby, and Solidity. Also, I have worked with C, C++, and Java in my early jobs.\"\n  },\n  resume: {\n    skills: {\n      header: \"Skills\",\n      text:\n        \"<0>Frontend</0><1>JavaScript, TypeScript, CSS3, HTML5, JAMstack, React.js (Redux,Hooks), Vue.js (Vuex, Nuxt).</1><2>Backend</2><3>SQL, Node.js, Express, PHP7, Laravel, Ruby on Rails, Solidity.</3><4>Tooling</4><5>Git, Git Flow, Vim, Docker, Docker Compose, Drone CI, Jenkins, Ansible, Puppet, Vagrant, VirtualBox, Bash, Linux (Ubuntu, Debian, Arch), AWS. </5><6>Other</6><7>Agile, MVC, REST, Object-oriented programming, Functional Programming, Microservices, Internationalization, Continuous Integration, Smart Contracts on Blockchain.</7>\"\n    },\n    education: {\n      header: \"Education\",\n      text:\n        \"<0>IPN Escuela Superior de Computo</0><1>Computer Systems Engineering</1>\",\n      dates: \"2003 - 2007\"\n    },\n    experience: {\n      header: \"Experience\",\n      pearl: {\n        dates: \"July 2020 - June 2021\",\n        headers: \"<0>Pearl</0><1>Senior Software Engineer</1>\",\n        items:\n          \"<0>Development of User Interfaces for AI Markers on Dental Imagery.</0><1>Development of Dashboard Components for Machine Learning products.</1><2>Development of Internal Tools and Prototypes (TypeScript, React, Redux, Vue, Vue).</2><3>API Design and implementation for Dental products (AWS, Node, Postgres).</3>\"\n      },\n      gumgum: {\n        dates: \"April 2013 - April 2020\",\n        headers: \"<0>GumGum</0><1>Senior Software Engineer</1>\",\n        items:\n          \"<0>Frontend: Development of internal React Applications (Ad Manager, Publisher Manager) and integration with REST APIs (React/Redux, ES6, Ramda, JAMStack).</0><1>Backend/Frontend: Maintenance of internal company Dashboard (PHP, Codeigniter, React, Vue).</1><2>Backend/Frontend: Development a React Application (Publisher Center) for managing ads on their sites (React, Redux, PHP, Codeigniter).</2><3>Design and programming of internal REST API Endpoints with Laravel and JWT.</3><4>Docker orchestration of legacy and new products (Docker, Docker Compose, Drone CI).</4><5>LAMP servers maintenance and configuration.</5><6>Implementation and configuration of Vagrant virtual machines for providing a common environment between all the team members (VirtualBox, Ansible, Puppet).</6><7>Database design for several internal products with MySQL, PostgreSQL.</7>\"\n      }\n    }\n  },\n  projects: {\n    text1:\n      \"This are some of the <1>Open Source</1> projects that I'm currently working on my free time:\",\n    coinlog: \"<0>coinlog:</0> A configurable cryptocurrency price tracker.\",\n    nftExplorer:\n      \"<0>nft-explorer:</0> A visualization tool for NFT Collections. An alternative to OpenSea.\",\n    nftAutoTool:\n      \"<0>nft-autotool:</0> NFT Generator script using layers with different rarities.\"\n  },\n  contact: {\n    text1: \"You can find me on:\"\n  }\n};\nexport default en;\n","const es: any = {\n  menu: {\n    about: \"Acerca de\",\n    projects: \"Proyectos\",\n    contact: \"Contacto\",\n    resume: \"CV\"\n  },\n  intro: {\n    greeting: \"¡Hola!\",\n    text1:\n      \"Me llamo <1>Iván Mayoral</1>; soy <3>Senior Software Engineer</3> con más de <5>diez</5> años de carrera profesional en Ciencias de la Computación.\",\n    text2:\n      \"Vivo en <1>Ciudad de México</1> 🇲🇽. Hace nueve años que trabajo de forma remota como contractor para empresas tecnológicas de USA: <3>GumGum</3> y <5>Pearl</5>.\",\n    text3:\n      \"Me apasiona el Software Libre, Linux, UI/UX, Accesibilidad y React.\",\n    text4:\n      \"Mis principales lenguajes de programación son JavaScript (TypeScript ❤️), PHP7, Ruby y Solidity. También he programado con C, C++ y Java en mis primeros trabajos.\"\n  },\n  resume: {\n    skills: {\n      header: \"Habilidades\",\n      text:\n        \"<0>Frontend</0><1>JavaScript, TypeScript, CSS3, HTML5, JAMstack, React.js (Redux,Hooks), Vue.js (Vuex, Nuxt).</1><2>Backend</2><3>SQL, Node.js, Express, PHP7, Laravel, Ruby on Rails, Solidity.</3><4>Tooling</4><5>Git, Git Flow, Vim, Docker, Docker Compose, Drone CI, Jenkins, Ansible, Puppet, Vagrant, VirtualBox, Bash, Linux (Ubuntu, Debian, Arch), AWS. </5><6>Otros</6><7>Agile, MVC, REST, Programación Orientada a Objetos, Programación Funcional, Microservicios, Internacionalización, Integración Contuinua, Smart Contracts en Blockchain.</7>\"\n    },\n    education: {\n      header: \"Educación\",\n      text:\n        \"<0>IPN Escuela Superior de Computo</0><1>Ingeniería en Sistemas Computacionales</1>\",\n      dates: \"2003 - 2007\"\n    },\n    experience: {\n      header: \"Experiencia\",\n      pearl: {\n        dates: \"Julio 2020 - Junio 2021\",\n        headers: \"<0>Pearl</0><1>Senior Software Engineer</1>\",\n        items:\n          \"<0>Desarollo de Interfaces de Usuario para marcadores de IA en imágenes dentales.</0><1>Desarollo de componentes para Dashboards para productos de Machine Learning.</1><2>Desarollo de herramientas internas y prototipos (TypeScript, React, Redux, Vue, Vue).</2><3>Desarollo e implemantación de APIs para productos dentales (AWS, Node, Postgres).</3>\"\n      },\n      gumgum: {\n        dates: \"Abril 2013 - Abril 2020\",\n        headers: \"<0>GumGum</0><1>Senior Software Engineer</1>\",\n        items:\n          \"<0>Frontend: Desarollo de aplicaciones internas en React (Ad Manager, Publisher Manager) e integración con APIs REST (React/Redux, ES6, Ramda, JAMStack).</0><1>Backend/Frontend: Mantenimiento de Dashboard internos (PHP, Codeigniter, React, Vue).</1><2>Backend/Frontend: Desarollo de aplicación en React (Publisher Center) para administrar ads (React, Redux, PHP, Codeigniter).</2><3>Diseño y programación de Enpoints API REST con Laravel y autentificación JWT.</3><4>Orquestación en Docker para productos nuevos y legacy (Docker, Docker Compose, Drone CI).</4><5>Mantenimiento y configuración de servidores LAMP.</5><6>Implementación y configuración de maquinas virtuales en Vagrant para proveer configuración común para todos los miembros del equipo (VirtualBox, Ansible, Puppet).</6><7>Diseño de Bases de Datos para productos internos con MySQL, PostgreSQL.</7>\"\n      }\n    }\n  },\n  projects: {\n    text1:\n      \"Estos son algunos de los proyectos <1>Open Source</1> en los que he trabajado en mi tiempo libre:\",\n    coinlog: \"<0>coinlog:</0> Un tracker configurable de criptomonedas.\",\n    nftExplorer:\n      \"<0>nft-explorer:</0> Herramienta de visualización para colecciones de NFT. Alternativa a OpenSea.\",\n    nftAutoTool:\n      \"<0>nft-autotool:</0> Script generador de NFTs usando capas con diferentes rarezas.\"\n  },\n  contact: {\n    text1: \"Puedes encontrarme en:\"\n  }\n};\nexport default es;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./locales/en\";\nimport es from \"./locales/es\";\n\nconst lng: string =\n  localStorage.getItem(\"language\") !== null\n    ? JSON.parse(`${localStorage.getItem(\"language\")}`)\n    : \"en\";\ni18n.use(initReactI18next).init({\n  resources: {\n    en: { translation: en },\n    es: { translation: es }\n  },\n  lng,\n  fallbackLng: \"en\",\n  // debug: true,\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nexport default i18n;\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}